tree.oj=tree(Purchase~.,data=OJ,subset=train)
tree.oj
summary(tree.oj)
plot(tree.oj)
text(tree.oj,pretty=0)
tree.oj
tree.pred=predict(tree.oj,test,type="class")
length(tree.pred)
table(tree.pred, OJ$Purchase[test])
head(test$Purchase)
test$Purchase
table(tree.pred, test$Purchase)
error.rate=1- mean(tree.pred.oj==OJ$Purchase[test])
error.rate=1- mean(tree.pred==OJ$Purchase[test])
error.rate=1- mean(tree.pred==test$Purchase)
error.rate
cv.oj=cv.tree(tree.oj, FUN=prune.misclass)
names(cv.oj)
cv.oj
plot(cv.oj$size,cv.oj$dev,type="b")
prune.oj=prune.misclass(tree.oj,best=4)
plot(prune.oj)
test(prune.oj,pretty=0)
prune.oj=prune.misclass(tree.oj,best=4)
plot(prune.oj)
text(prune.oj,pretty=0)
prune.tree.pred.oj=predict(prune.oj, OJ[test,], type="class")
prune.tree.pred.oj=predict(prune.oj, test, type="class")
table(pruen.tree.pred.oj,OJ$Purchase[test])
prune.tree.pred.oj=predict(prune.oj, test, type="class")
table(prune.tree.pred.oj,OJ$Purchase[test])
prune.tree.pred.oj=predict(prune.oj, test, type="class")
table(prune.tree.pred.oj,test$Purchase)
error.rate.prune=1-ean(prune.tree.pred.oj==OJ$Purchase[test])
prune.tree.pred.oj=predict(prune.oj, test, type="class")
table(prune.tree.pred.oj,test$Purchase)
error.rate.prune=1-mean(prune.tree.pred.oj==test$Purchase)
error.rate.prune
library(fedreporter)
library(purrr)
setwd("~/github/scholar/")
load("./Desktop/Advanced data Science/scholar/citation.RData")
courseInfo<-read.csv("jhsph_courseinfo.csv")
first_name_list <- courseInfo$Firstname
last_name_list <- courseInfo$Lastname
head(first_name_list)
head(last_name_list)
first_name_list <- gsub("\\s+.+","",first_name_list)
dat <- (map(
.x = paste0(last_name_list,",",first_name_list),
.f = ~ possibly(fe_projects_search(pi_name = .x), otherwise = "Not Found")))
dat <- (map(
.x = paste0(last_name_list,", ",first_name_list),
.f = ~ possibly(fe_projects_search(pi_name = .x), otherwise = "Not Found")))
dat <- (map(
.x = paste0(last_name_list,", ",first_name_list)[1:2],
.f = ~ possibly(fe_projects_search(pi_name = .x)[1:2], otherwise = "Not Found")))
fe_projects_search(pi_name = "MATSUI, ELIZABETH")
dat <- (map(
.x = paste0(last_name_list,", ",first_name_list)[1:2],
.f = ~ possibly(fe_projects_search(pi_name = .x)[1:2], otherwise = "Not Found")))
View(dat)
dat<-lapply(paste0(last_name_list,", ",first_name_list)[1:2], safely(fe_projects_search))
View(dat)
View(dat)
EM <- fe_projects_search(pi_name = "MATSUI, ELIZABETH")
View(EM)
pi_list <- last_name_list,", ",first_name_list)[1:2]
pi_list <- paste0(last_name_list,", ",first_name_list)[1:2]
pi_list <- paste0(last_name_list,", ",first_name_list)
dat<-lapply(pi_list[1:2], safely(fe_projects_search))
dat<-lapply(pi_list[1:2], fe_projects_search)
dat <- (map(
.x = pi_list[1:2],
.f = ~ possibly(fe_projects_search(pi_name = .x), otherwise = "Not Found")))
View(dat)
View(dat)
dat <- (map(
.x = pi_list[1:2],
.f = ~ fe_projects_search(pi_name = .x)))
View(dat)
View(dat)
dat <- map(
.x = pi_list[1:2],
.f = ~ fe_projects_search(pi_name = .x)$content$items)
View(dat)
dat <- map(
.x = pi_list[1:3],
.f = ~ fe_projects_search(pi_name = .x)$content$items)
dat <- map(
.x = pi_list[1:4],
.f = ~ fe_projects_search(pi_name = .x)$content$items)
View(dat)
View(dat)
dat <- map(
.x = pi_list[1:5],
.f = ~ fe_projects_search(pi_name = .x)$content$items)
dat <- map(
.x = pi_list[1:5],
.f = ~ possibly(fe_projects_search(pi_name = .x)$content$items),otherwise="Not Found")
dat <- map(
.x = pi_list[1:5],
.f = ~ possibly(fe_projects_search(pi_name = .x)$content$items,otherwise="Not Found"))
dat <- map(
.x = pi_list[1:5],
.f = ~ safely(fe_projects_search(pi_name = .x)$content$items))
dat <- map(
.x = pi_list[c(1:3,5)],
.f = ~ safely(fe_projects_search(pi_name = .x)$content$items))
dat <- map(
.x = pi_list[c(1:3,6)],
.f = ~ safely(fe_projects_search(pi_name = .x)$content$items))
View(dat)
dat <- map(
.x = pi_list[c(-4,-5)],
.f = ~ fe_projects_search(pi_name = .x)$content$items)
dat <- map(
.x = pi_list[c(-4,-5)],
.f = ~ try(fe_projects_search(pi_name = .x)$content$items))
View(dat)
View(dat)
object.size(courseInfo)
View(citation)
more_names <- names(citation)
strsplit(more_names[1]," ")
strsplit(more_names[1:2]," ")
more_names_list <- strsplit(more_names," ")
more_names_list[[1]]
more_names_list[1]
map(more_names_list,"[[")
map(more_names_list,[[)
map(.x = more_names_list, .f = .x[[]])
map(.x = more_names_list, .f = .x[[1]])
map(.x = more_names_list, .f = [[1]])
at_depth(.x = more_names_list, .depth = 1, .f = print(x.))
at_depth(.x = more_names_list, .depth = 1, .f = print(.x))
at_depth(.x = more_names_list, .depth = 1, .f = print())
at_depth(.x = more_names_list, .depth = 1, .f = print
)
at_depth(.x = more_names_list, .depth = 2, .f = print)
at_depth(.x = more_names_list, .depth = 1, .f = print)
more_names_list
more_names_list[[1]][[1]]
lapply(X = more_names_list,FUN = "[[")
lapply(X = more_names_list,FUN = "[[",1:20)
lapply(X = more_names_list,FUN = "[[",c(1:20))
lapply(X = more_names_list,FUN = "[[",1)
at_depth(.x = more_names_list, .depth = 1, .f = lapply(X = more_names_list,FUN = "[[",1))
lapply(X = more_names_list,FUN = "[[",1)
more_firsts <- lapply(X = more_names_list,FUN = "[[",1)
more_lasts <- lapply(X = more_names_list,FUN = "[[", 2)
more_lasts[[1]]
x <- list(list(10, 20), list(30, 40))
y <- list(list(1, 2), list(3, 4))
map(.x = more_names_list, .f = )
map2(x, y, map2, `+`)
map(x, `+`)
map(more_names_list, `+`)
map(x, y, map2, `+`)
map2(x, y, map2, `+`)
map(more_names_list, `[[`)
map(more_names_list, `[[`,1)
map(more_names_list, "[[",1)
map(more_names_list, `[[`,1)
more_firsts <- map_chr(more_names_list, `[[`,1)
more_lasts <- map_chr(more_names_list, `[[`,2)
all_firsts <- c(first_name_list,more_firsts)
all_lasts <- c(last_name_list,more_lasts)
all_firsts <- c(first_name_list,more_firsts)
all_lasts <- c(last_name_list,more_lasts)
pi_list <- paste0(all_lasts, ", ", all_firsts)
head(pi_list)
first_name_list <- courseInfo$Firstname
last_name_list <- courseInfo$Lastname
first_name_list <- gsub("\\s+.+","",first_name_list)
all_firsts <- c(first_name_list,more_firsts)
all_lasts <- c(last_name_list,more_lasts)
pi_list <- paste0(all_lasts, ", ", all_firsts)
last_name_list <- as.character(courseInfo$Lastname)
more_names <- names(citation)
more_names_list <- strsplit(more_names," ")
#more_firsts <- lapply(X = more_names_list,FUN = "[[", 1)
#more_lasts <- lapply(X = more_names_list,FUN = "[[", 2)
more_firsts <- map_chr(more_names_list, `[[`,1)
more_lasts <- map_chr(more_names_list, `[[`,2)
first_name_list <- gsub("\\s+.+","",first_name_list)
all_firsts <- c(first_name_list,more_firsts)
all_lasts <- c(last_name_list,more_lasts)
pi_list <- paste0(all_lasts, ", ", all_firsts)
head(pi_list)
dat <- map(
.x = pi_list,
.f = ~ try(fe_projects_search(pi_name = .x)$content$items))
View(dat)
library(readr)
readr::write_rds(x = pi_list,path = ".", compress = "none")
readr::write_rds(x = pi_list,path = "pi_list", compress = "none")
readr::write_rds(x = all_firsts, path = "first_name_list", compress = "none")
readr::write_rds(x = all_lasts, path = "last_name_list", compress = "none")
readr::write_rds(x = dat, path = "grants_nested_list", compress = "none")
readr::write_rds(x = pi_list,path = "pi_list.rds", compress = "none")
readr::write_rds(x = all_firsts, path = "first_name_list.rds", compress = "none")
readr::write_rds(x = all_lasts, path = "last_name_list.rds", compress = "none")
readr::write_rds(x = dat, path = "grants_nested_list.rds", compress = "none")
shiny::runApp('~/github/AdvDataSci2_Project/Supreme_Court/supreme_court_app')
runApp('~/github/AdvDataSci2_Project/Supreme_Court/supreme_court_app')
# library(plotly)
rm(pi_list)
load("pi_list.rds")
pi_list <- paste0(all_lasts, ", ", all_firsts)
saveRDS(object = pi_list, file = "pi_list.rds", compress = "none")
?saveRDS
saveRDS(object = pi_list, file = "pi_list.rds", compress = FALSE)
load("pi_list.rds")
read_rds("pi_list.rds")
name_list <- paste0(all_lasts, ", ", all_firsts)
readr::write_rds(x = name_list,path = "name_list.rds", compress = "none")
read_rds("name_list.rds")
runApp()
runApp()
runApp()
strsplit(x = "Aboumatar, Hanan", split = ",")
f = strsplit(x = "Aboumatar, Hanan", split = ",")[[1]][1]
f
l = strsplit(x = name, split = ",")[[1]][2]
l = strsplit(x = "Aboumatar, Hanan", split = ",")[[1]][2]
l
runApp()
str_split(string = "Aboumatar, Hanan", pattern = ", ", n = 1)
as.chstr_split(string = "Aboumatar, Hanan", pattern = ", ", n = 1, simplify = TRUE)
str_split(string = "Aboumatar, Hanan", pattern = ", ", n = 1, simplify = TRUE)
runApp()
#saveRDS(object = pi_list, file = "pi_list.rds", compress = FALSE)
grants <- dat
readr::write_rds(x = grants, path = "grants_nested_list.rds", compress = "none")
read_rds("grants_nested_list.rds")
read_rds("name_list.rds")
name_list<-read_rds("name_list.rds")
readr::write_rds(x = grants, path = "grant_nested_list.rds", compress = "none")
grant_nested_list<-read_rds("grant_nested_list.rds")
runApp()
course = read.csv("jhsph_courseinfo.csv")
View(course)
runApp()
last_name_list <- read_rds("last_name_list.rds")
runApp()
runApp()
runApp()
View(grant_nested_list)
sapply(grant_nested_list, "[[", "contactPi")
library(magrittr)
grant_nested_list %>% map(.f = ~ `[[`)
grant_nested_list %>% map(.f = ~ `[[`) %>% map(.f = ~ `[[`)
grant_nested_list %>% purrr::flatten(.x = grant_nested_list)
grant_nested_list %>% purrr::flatten()
grant_list<-grant_nested_list %>% purrr::flatten()
View(grant_list)
grant_list<-grant_nested_list %>% purrr::flatten()%>% purrr::flatten()
View(grant_list)
grant_list<-grant_nested_list %>% purrr::flatten()
View(grant_list)
library(data.table)
grant_df <- rbindlist(grant_list, fill=TRUE)
grant_df <- rbindlist(grant_list, fill=FALSE)
grant_df <- rbindlist(grant_list, use.names = TRUE, fill = TRUE)
purrr::modify_if(.x = grant_list,.p=(length(.x)==1),.f=~print)
purrr::modify_if(grant_list,length(.x)==1,print)
?modify_if
purrr::modify_if(grant_list,length()==1,print)
purrr::modify_if(grant_list,length(.x)==1,print)
purrr::modify_if(grant_list,is.list,print)
grant_list %>% modify_if(!is.list,as.list)
grant_list %>% modify_if(is.list,as.list)
grant_list %>% modify_if(is_character,as.list)
grant_list <- grant_list %>% modify_if(is_character,as.list)
View(grant_list)
grant_df <- rbindlist(grant_list, use.names = TRUE, fill = TRUE)
grant_df <- rbindlist(grant_list, use.names = TRUE)
grant_df <- rbindlist(grant_list, fill = TRUE)
?purrr::set_names
grant_df <- rbindlist(grant_list)
grant_df <- rbindlist(grant_list, fill = TRUE)
grant_df <- rbindlist(grant_list, fill = TRUE,use.names = FALSE)
library(purrr)
?set_names()
grant_df_names <- names(grant_list[[1]])
if(length(grant_df_names)!=27){
grant_df_names <- names(grant_list[[2]])
}
proper_names_index <- which(at_depth(grant_list,1,length)==27)
proper_names_index <- which(modify_depth(grant_list,1,length)==27)
#grant_list <- grant_list %>% modify_if(is_character,~ set_names())
improper_names_index <- which(modify_depth(grant_list,1,length)!=27)
grant_list[1]
#grant_list <- grant_list %>% modify_if(is_character,~ set_names())
grant_df_names <- names() %>% which(modify_depth(grant_list,1,length)==27)[1] %>% grant_list[]
grant_list %>% modify_depth(1,length)==27
grant_list %>% modify_depth(1,length)==27 %>% which()
#grant_list <- grant_list %>% modify_if(is_character,~ set_names())
grant_df_names <- grant_list %>% modify_depth(1,length)==27 %>% names()
#grant_list <- grant_list %>% modify_if(is_character,~ set_names())
grant_df_names <- grant_list %>% modify_depth(1,length)==27 %>% which()[1]
#grant_list <- grant_list %>% modify_if(is_character,~ set_names())
grant_df_names_keep <- grant_list %>% modify_depth(1,length)==27)
#grant_list <- grant_list %>% modify_if(is_character,~ set_names())
grant_df_names_keep <- grant_list %>% modify_depth(1,length)==27
grant_df_names <- grant_list[grant_df_names_keep][1]
grant_df_names <- grant_list[grant_df_names_keep]
View(grant_df_names)
grant_df_names <- grant_list[grant_df_names_keep][[1]] %>% name()
grant_df_names <- grant_list[grant_df_names_keep][[1]] %>% names()
grant_df_names <- grant_list[grant_df_names_keep][[1]] %>% names()
grant_df <- grant_list[grant_df_keep]
#grant_list <- grant_list %>% modify_if(is_character,~ set_names())
grant_df_keep <- grant_list %>% modify_depth(1,length)==27
grant_df <- grant_list[grant_df_keep]
grant_df_names <- grant_df[[1]] %>% names()
grant_df <- grant_list[grant_df_keep] %>% rbindlist(fill = TRUE,use.names = FALSE)
View(grant_df)
grant_flat %>% modify_if(is.null,as.logical)
grant_flat <- grant_nested_list %>% purrr::flatten()
#grant_list <- grant_list %>% modify_if(is_character,~ set_names())
grant_keep <- grant_flat %>% modify_depth(1,length)==27
grant_flat <- grant_flat[grant_keep]
grant_flat %>% modify_if(is.null,as.logical)
View(grant_flat)
grant_flat %>% modify_depth(1,~is.null <-NA)
grant_flat %>% modify_if(is.null, setAs(NULL,NA))
grant_flat %>% modify_if(is.null, setAs("NULL","NA"))
grant_flat %>% modify_if(is.null, ~setAs("NULL","NA"))
grant_flat %>% modify_depth(1, is.null)
grant_flat %>% modify_depth(2, is.null)
grant_flat[grant_null] <- NA
grant_null <- grant_flat %>% modify_depth(2, is.null)
grant_flat[grant_null] <- NA
grant_flat[grant_null]
View(grant_null)
grant_flat[[grant_null]]
grant_flat2 <- grant_flat %>% flatten()
View(grant_flat2)
grant_null <- grant_flat %>%  map(modify_if(is.null))
grant_null <- grant_flat %>%  map(modify_if(is.null,0))
grant_null <- grant_flat %>%  map(modify_if(is.null,print))
grant_null <- grant_flat %>% map(`[[`,1), modify_if(is.null,as.character)
grant_null <- grant_flat %>% map(`[[`,1) %>%  modify_if(is.null,as.character)
View(grant_null)
grant_flat %>% map(`[[`,1)
nullToNA <- function(x) {
x[sapply(x, is.null)] <- NA
return(x)
}
for(i in 1:length(grant_flat)){
flat_df
lapply(grant_flat[[i]], nullToNA)
}
grant_flat <- lapply(items[2], nullToNA)
nullToNA <- function(x) {
x[sapply(x, is.null)] <- NA
return(x)
}
for(i in 1:length(grant_flat)){
flat_df
lapply(grant_flat[[i]], nullToNA)
}
grant_flat <- lapply(grant_flat[2], nullToNA)
nullToNA <- function(x) {
x[sapply(x, is.null)] <- NA
return(x)
}
for(i in 1:length(grant_flat)){
lapply(grant_flat[[i]], nullToNA)
}
grant_flat <- lapply(grant_flat[2], nullToNA)
nullToNA <- function(x) {
x[sapply(x, is.null)] <- NA
return(x)
}
for(i in 1:length(grant_flat)){
lapply(grant_flat[[i]], nullToNA)
}
View(grant_flat)
View(grant_flat)
grant_flat <- grant_nested_list %>% purrr::flatten()
#grant_list <- grant_list %>% modify_if(is_character,~ set_names())
grant_keep <- grant_flat %>% modify_depth(1,length)==27
grant_flat <- grant_flat[grant_keep]
nullToNA <- function(x) {
x[sapply(x, is.null)] <- NA
return(x)
}
for(i in 1:length(grant_flat)){
lapply(grant_flat[[i]], nullToNA)
}
nullToNA <- function(x) {
x[sapply(x, is.null)] <- NA
return(x)
}
for(i in 1:length(grant_flat)){
sapply(grant_flat[[i]], nullToNA)
}
View(grant_flat)
View(grant_flat)
grant_null <- grant_flat %>% modify_depth(2, nullToNA)
nullToNA <- function(x) {
x[[sapply(x, is.null)]] <- NA
return(x)
}
for(i in 1:length(grant_flat)){
sapply(grant_flat[[i]], nullToNA)
}
View(grant_null)
grant_null <- grant_flat %>% modify_depth(2, is.null)
View(grant_null)
grant_null <- grant_flat %>% modify_depth(2, is.null) <- NA
grant_null <- grant_flat %>% modify_depth(2,NA->~ is.null)
nullToNA <- function(x) {
x[sapply(x, is.null)] <- NA
return(x)
}
grant_flat <- lapply(grant_flat, nullToNA)
View(grant_flat)
grant_flat <- grant_nested_list %>% purrr::flatten()
grant_keep <- grant_flat %>% modify_depth(1,length)==27
grant_flat <- grant_flat[grant_keep]
grant_null <- grant_flat %>% modify_depth(2, is.null)
nullToNA <- function(x) {
x[sapply(x, is.null)] <- NA
return(x)
}
grant_flat <- map(grant_flat, nullToNA)
View(grant_flat)
View(grant_flat)
grant_flat <- grant_nested_list %>% purrr::flatten()
grant_keep <- grant_flat %>% modify_depth(1,length)==27
grant_flat <- grant_flat[grant_keep]
grant_null <- grant_flat %>% modify_depth(2, is.null)
nullToNA <- function(x) {
x[map(x, is.null)] <- NA
return(x)
}
grant_flat <- map(grant_flat, nullToNA)
grant_flat <- grant_nested_list %>% purrr::flatten()
grant_keep <- grant_flat %>% modify_depth(1,length)==27
grant_flat <- grant_flat[grant_keep]
grant_null <- grant_flat %>% modify_depth(2, is.null)
nullToNA <- function(x) {
x[sapply(x, is.null)] <- NA
return(x)
}
grant_flat <- map(grant_flat, nullToNA)
grant_df <- map(grant_flat, nullToNA) %>% rbindlist()
View(grant_df)
?rbindlist
readr::write_rds(x = grant_df, path = "grant_df.rds", compress = "none")
contactPi_name_keep <- grepl(pattern = paste0("^",l,f),
x = grant_df,
ignore.case = TRUE)
contactPi_name_keep <- grepl(pattern = paste0("^",l,f),
x = grant_df,
ignore.case = TRUE)
contactPi_name_keep <- grepl(pattern = paste0("^",l,f),
x = grant_df$contactPi,
ignore.case = TRUE)
contactPi_name_keep
contactPi_name_keep <- grepl(pattern = paste0("^",l),
x = grant_df$contactPi,
ignore.case = TRUE)
contactPi_name_keep
l="Hanan"
contactPi_name_keep <- grepl(pattern = paste0("^",l),
x = grant_df$contactPi,
ignore.case = TRUE)
contactPi_name_keep
l <- f
contactPi_name_keep <- grepl(pattern = paste0("^",l),
x = grant_df$contactPi,
ignore.case = TRUE)
contactPi_name_keep
f="Hanan"
contactPi_name_keep <- grepl(pattern = paste0("^",l,f),
x = grant_df$contactPi,
ignore.case = TRUE)
contactPi_name_keep
contactPi_name_keep <- grepl(pattern = paste0("^",l,", ",f),
x = grant_df$contactPi,
ignore.case = TRUE)
contactPi_name_keep
# splitname = str_split(string = fullname,
#                       pattern = ", ")[[1]]
# l = splitname[1]
# f = splitname[2]
# contactPi_name_keep <- grepl(pattern = paste0("^",l,", ",f),
#                              x = grant_df$contactPi,
#                              ignore.case = TRUE)
fullname <- pi_list[1]
contactPi_name_keep <- grepl(pattern = paste0("^",fullname),
x = grant_df$contactPi,
ignore.case = TRUE)
contactPi_df <- (grant_df[contactPi_keep]
print.data.frame(grant_df[grant_df$contactPi==])
})
contactPi_df <- (grant_df[contactPi_keep]
contactPi_df <- grant_df[contactPi_keep]
contactPi_df <- grant_df[contactPi_keep]
contactPi_keep <- grepl(pattern = paste0("^",fullname),
x = grant_df$contactPi,
ignore.case = TRUE)
contactPi_df <- grant_df[contactPi_keep]
View(contactPi_df)
runApp()
View(grant_df)
grant_df %>% names
