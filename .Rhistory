summary(modelC)$coefficients
summary(modelC)$coefficients[4,1]
summary(modelC)
modelE = glm(bf~agechldc+sex_chld+sex_chld:agechldc, data=nepalibf,
family=binomial(link="logit"))
summary(modelE)
modelA$coefficients
confint.default(modelA)
knitr::opts_chunk$set(echo = TRUE)
in
i
i
i
install.packages("ResourceSelection") # only if haven't installed yet
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
nepalibf = read_csv("nepalibf.csv")
head(nepalibf)
summary(nepalibf)
table(nepalibf$bf)
dim(nepalibf)
sum(table(nepalibf$bf))
pairs(~ parity + age_chld + age_mom + bf, data=nepalibf, upper.panel=NULL)
pairs(~ jitter(parity, .5) + jitter(age_chld, .5) + jitter(age_mom, .5) + jitter(bf, .5), data=nepalibf, upper.panel=NULL, pch=20, cex=.5)
boxplot(age_chld ~ bf, data=nepalibf, ylab="Age of child (years)")
boxplot(age_mom ~ bf, data=nepalibf)
boxplot(parity ~ bf, data=nepalibf)
CT = xtabs(~ sex_chld + bf, data=nepalibf)
addmargins(CT)
prop.table(CT, margin=1)
addmargins(prop.table(CT, margin=1), margin=2)
graphData = nepalibf %>% #new data frame with variables to graph
group_by(age_chld_quart) %>% #group by age quartile
summarize(prop = mean(bf, na.rm=TRUE), # prop of bf in each quartile
lodds = log(prop/(1-prop))) # log odds for each quartile
qplot(x=age_chld_quart, y=lodds, data=graphData, xlab="Age group of child (quartiles)", ylab="log(odds of breast-feeding)", geom = c("line","point"))
nepalibf = nepalibf %>%
mutate(agechldc = age_chld - mean(age_chld))
model1 = glm(bf ~ sex_chld + agechldc, data=nepalibf,
family=binomial(link="logit"))
summary(model1)
model1$coefficients
exp(model1$coefficients)
exp(confint.default(model1))
nepalibf = nepalibf %>% mutate(x3 = agechldc^2)
modelA = glm(bf~sex_chld+agechldc+x3, data=nepalibf, family=binomial(link="logit"))
summary(modelA)
modelB = glm(bf~sex_chld+agechldc, data=nepalibf, family=binomial(link="logit"))
summary(modelB)
anova(modelA, modelB, test="LRT")
modelA$coefficients
confint.default(modelA)
nepalibf = nepalibf %>%
mutate(age1 = age_chld - 24,
age2 = ifelse(age_chld > 24, age_chld - 24, 0),
age3 = ifelse(age_chld > 36, age_chld - 36, 0))
modelC = glm(bf~sex_chld+age1+age2+age3, data=nepalibf, family=binomial(link="logit"))
summary(modelC)
modelD = glm(bf~sex_chld+age_chld, data=nepalibf, family=binomial(link="logit"))
summary(modelD)
anova(modelC, modelD, test="LRT")
modelE = glm(bf~agechldc+sex_chld+sex_chld:agechldc, data=nepalibf,
family=binomial(link="logit"))
summary(modelE)
nepalibf = nepalibf %>%
na.omit() %>% # Remove observations with missing data
mutate(sex_chld=recode_factor(sex_chld, `0`="Male", `1`="Female")) # Factor sex_chld
modelD = glm(bf ~ sex_chld + age_chld, data=nepalibf, family=binomial(link="logit"))
nepalibf = nepalibf %>% mutate(phat = predict(modelD, type="response"))
qplot(x=age_chld, y=phat, color=sex_chld, shape=sex_chld, data=nepalibf,
xlab="Child's age in years", ylab="Predicted prevalence of Breast-feeding")
# install.packages("ResourceSelection") # only if haven't installed yet
library(ResourceSelection)
hoslem.test(nepalibf$bf, nepalibf$phat, g=10)
hoslem.test(nepalibf$bf, nepalibf$phat)$observed
hoslem.test(nepalibf$bf, nepalibf$phat)$expected
modelF = glm(bf~sex_chld+age_chld+age_mom+parity, data=nepalibf,
family=binomial(link="logit"))
summary(modelF)
summary(modelD)
anova(modelD, modelF, test="LRT")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
nepalibf = read_csv("nepalibf.csv")
head(nepalibf)
summary(nepalibf)
table(nepalibf$bf)
dim(nepalibf)
sum(table(nepalibf$bf))
pairs(~ parity + age_chld + age_mom + bf, data=nepalibf, upper.panel=NULL)
pairs(~ jitter(parity, .5) + jitter(age_chld, .5) + jitter(age_mom, .5) + jitter(bf, .5), data=nepalibf, upper.panel=NULL, pch=20, cex=.5)
boxplot(age_chld ~ bf, data=nepalibf, ylab="Age of child (years)")
boxplot(age_mom ~ bf, data=nepalibf)
boxplot(parity ~ bf, data=nepalibf)
CT = xtabs(~ sex_chld + bf, data=nepalibf)
addmargins(CT)
prop.table(CT, margin=1)
addmargins(prop.table(CT, margin=1), margin=2)
graphData = nepalibf %>% #new data frame with variables to graph
group_by(age_chld_quart) %>% #group by age quartile
summarize(prop = mean(bf, na.rm=TRUE), # prop of bf in each quartile
lodds = log(prop/(1-prop))) # log odds for each quartile
qplot(x=age_chld_quart, y=lodds, data=graphData, xlab="Age group of child (quartiles)", ylab="log(odds of breast-feeding)", geom = c("line","point"))
nepalibf = nepalibf %>%
mutate(agechldc = age_chld - mean(age_chld))
model1 = glm(bf ~ sex_chld + agechldc, data=nepalibf,
family=binomial(link="logit"))
summary(model1)
model1$coefficients
exp(model1$coefficients)
exp(confint.default(model1))
nepalibf = nepalibf %>% mutate(x3 = agechldc^2)
modelA = glm(bf~sex_chld+agechldc+x3, data=nepalibf, family=binomial(link="logit"))
summary(modelA)
modelB = glm(bf~sex_chld+agechldc, data=nepalibf, family=binomial(link="logit"))
summary(modelB)
anova(modelA, modelB, test="LRT")
modelA$coefficients
confint.default(modelA)
nepalibf = nepalibf %>%
mutate(age1 = age_chld - 24,
age2 = ifelse(age_chld > 24, age_chld - 24, 0),
age3 = ifelse(age_chld > 36, age_chld - 36, 0))
modelC = glm(bf~sex_chld+age1+age2+age3, data=nepalibf, family=binomial(link="logit"))
summary(modelC)
modelD = glm(bf~sex_chld+age_chld, data=nepalibf, family=binomial(link="logit"))
summary(modelD)
anova(modelC, modelD, test="LRT")
modelE = glm(bf~agechldc+sex_chld+sex_chld:agechldc, data=nepalibf,
family=binomial(link="logit"))
summary(modelE)
nepalibf = nepalibf %>%
na.omit() %>% # Remove observations with missing data
mutate(sex_chld=recode_factor(sex_chld, `0`="Male", `1`="Female")) # Factor sex_chld
modelD = glm(bf ~ sex_chld + age_chld, data=nepalibf, family=binomial(link="logit"))
nepalibf = nepalibf %>% mutate(phat = predict(modelD, type="response"))
qplot(x=age_chld, y=phat, color=sex_chld, shape=sex_chld, data=nepalibf,
xlab="Child's age in years", ylab="Predicted prevalence of Breast-feeding")
# install.packages("ResourceSelection") # only if haven't installed yet
library(ResourceSelection)
hoslem.test(nepalibf$bf, nepalibf$phat, g=10)
hoslem.test(nepalibf$bf, nepalibf$phat)$observed
hoslem.test(nepalibf$bf, nepalibf$phat)$expected
modelF = glm(bf~sex_chld+age_chld+age_mom+parity, data=nepalibf,
family=binomial(link="logit"))
summary(modelF)
summary(modelD)
anova(modelD, modelF, test="LRT")
hoslem.test(nepalibf$bf, nepalibf$phat, g=10)
hoslem.test(nepalibf$bf, nepalibf$phat)$observed
hoslem.test(nepalibf$bf, nepalibf$phat)$expected
hoslem.test(nepalibf$bf, nepalibf$phat)$observed
hoslem.test(nepalibf$bf, nepalibf$phat, g=10)
hoslem.test(nepalibf$bf, nepalibf$phat, g=10)$p.value
modelF = glm(bf~sex_chld+age_chld+age_mom+parity, data=nepalibf,
family=binomial(link="logit"))
summary(modelF)
summary(modelD)
anova(modelD, modelF, test="LRT")
.Library
find.package('rj')
find.package('r')
find.package('rlang')
Sys.info()
R.Version()
R.Version()
R.Version()
.Library
knitr::opts_chunk$set(echo = TRUE)
summary(nepalibf)
# I use the 'readr' package to load in the data
nepalibf = read_csv("nepalibf.csv")
# Most of the packages I need to install are contained in 'tidyverse' package
library(tidyverse)
# I use the 'readr' package to load in the data
nepalibf = read_csv("nepalibf.csv")
# To explore data, I use standard built-in commands
head(nepalibf)
knitr::opts_chunk$set(echo = TRUE)
# Most of the packages I need to install are contained in 'tidyverse' package
library(tidyverse)
# I use the 'readr' package to load in the data
nepalibf = read_csv("nepalibf.csv")
# To explore data, I use standard built-in commands
head(nepalibf)
summary(nepalibf)
table(nepalibf$bf)
dim(nepalibf)
sum(table(nepalibf$bf))
# I use a scatterplot matrix to display interrelationships among the three continuous predictor variables (number of births (parity), age of the mother, and child age) and the response variable (breastfeeding).
pairs(~ parity + age_chld + age_mom + bf, data=nepalibf, upper.panel=NULL)
pairs(~ jitter(parity, .5) + jitter(age_chld, .5) + jitter(age_mom, .5) + jitter(bf, .5), data=nepalibf, upper.panel=NULL, pch=20, cex=.5)
# Below I present boxplots which show the distribution of three of the continuous covariates by breastfeeding status.
boxplot(age_chld ~ bf, data=nepalibf, ylab="Age of child (years)")
boxplot(age_mom ~ bf, data=nepalibf)
boxplot(parity ~ bf, data=nepalibf)
# Below I present a table containing the proportions of breastfed children by gender.
CT = xtabs(~ sex_chld + bf, data=nepalibf)
addmargins(CT)
prop.table(CT, margin=1)
addmargins(prop.table(CT, margin=1), margin=2)
# To check whether the log odds of breast feeding is approximately linear with child’s age, I first compute p (defined to be the observed prevalence of breastfeeding for children of a particular age) and then plot the observed log odds (log (p/(1-p))) at the median age for each of the 4 “bins” defined by the quartiles of child’s age.
graphData = nepalibf %>% #new data frame with variables to graph
group_by(age_chld_quart) %>% #group by age quartile
summarize(prop = mean(bf, na.rm=TRUE), # prop of bf in each quartile
lodds = log(prop/(1-prop))) # log odds for each quartile
qplot(x=age_chld_quart, y=lodds, data=graphData, xlab="Age group of child (quartiles)", ylab="log(odds of breast-feeding)", geom = c("line","point"))
# Below I use logistic regression to obtain the estimated prevalence of breast feeding as a function of child’s age (centered at the mean age) and gender.
nepalibf = nepalibf %>%
mutate(agechldc = age_chld - mean(age_chld))
model1 = glm(bf ~ sex_chld + agechldc, data=nepalibf,
family=binomial(link="logit"))
summary(model1)
model1$coefficients
exp(model1$coefficients)
exp(confint.default(model1))
# Here I create x3: quadratic term of child age centered at the mean.
nepalibf = nepalibf %>% mutate(x3 = agechldc^2)
# First, I fit extended model with the quadratic term.
modelA = glm(bf~sex_chld+agechldc+x3, data=nepalibf, family=binomial(link="logit"))
summary(modelA)
# Fit null model without the quadratic term
modelB = glm(bf~sex_chld+agechldc, data=nepalibf, family=binomial(link="logit"))
summary(modelB)
# Use a likelihood ratio test to compare null vs extended models.
anova(modelA, modelB, test="LRT")
# Obtain beta coefficients.
modelA$coefficients
confint.default(modelA)
# Y <-
# To determine whether the fit can be improved with a non-linear “broken arrow model” for child’s age breakpoints at 24 and 36 months, I first create spline terms for breakpoints at 24 and 36 months.
nepalibf = nepalibf %>%
mutate(age1 = age_chld - 24,
age2 = ifelse(age_chld > 24, age_chld - 24, 0),
age3 = ifelse(age_chld > 36, age_chld - 36, 0))
# Next, I fit the extended model containing the spline terms.
modelC = glm(bf~sex_chld+age1+age2+age3, data=nepalibf, family=binomial(link="logit"))
summary(modelC)
# Then, I fit the null model without the spline terms
modelD = glm(bf~sex_chld+age_chld, data=nepalibf, family=binomial(link="logit"))
summary(modelD)
anova(modelC, modelD, test="LRT")
modelE = glm(bf~agechldc+sex_chld+sex_chld:agechldc, data=nepalibf,
family=binomial(link="logit"))
summary(modelE)
nepalibf = nepalibf %>%
na.omit() %>% # Remove observations with missing data
mutate(sex_chld=recode_factor(sex_chld, `0`="Male", `1`="Female")) # Factor sex_chld
modelD = glm(bf ~ sex_chld + age_chld, data=nepalibf, family=binomial(link="logit"))
nepalibf = nepalibf %>% mutate(phat = predict(modelD, type="response"))
qplot(x=age_chld, y=phat, color=sex_chld, shape=sex_chld, data=nepalibf,
xlab="Child's age in years", ylab="Predicted prevalence of Breast-feeding")
# install.packages("ResourceSelection") # only if haven't installed yet
library(ResourceSelection)
hoslem.test(nepalibf$bf, nepalibf$phat, g=10)
hoslem.test(nepalibf$bf, nepalibf$phat)$observed
hoslem.test(nepalibf$bf, nepalibf$phat)$expected
modelF = glm(bf~sex_chld+age_chld+age_mom+parity, data=nepalibf,
family=binomial(link="logit"))
summary(modelF)
summary(modelD)
anova(modelD, modelF, test="LRT")
# Obtain beta coefficients.
modelA$coefficients
quad_eq <- function(sex=1,age){
coeff <- modelA$coefficients
y <- coeff[1]+coeff[2]*sex+coeff[3]*age+coeff[4]*age**2
print(y)
}
quad_eq(12)
quad_eq <- function(age, sex=1){
coeff <- modelA$coefficients
y <- coeff[1]+coeff[2]*sex+coeff[3]*age+coeff[4]*age**2
print(y)
}
quad_eq(age=12)
quad_eq(age=6)
quad_eq <- function(age, sex=1){
coeff <- modelA$coefficients
y <- coeff[1]+coeff[2]*sex+coeff[3]*age+coeff[4]*age**2
names(y) <- paste0("Estimated prevalence of breast feeding for a ",age," month old female child")
print(y)
}
quad_eq(age=6)
quad_eq <- function(age, sex=1){
coeff <- modelA$coefficients
y <- exp(coeff[1]+coeff[2]*sex+coeff[3]*age+coeff[4]*age**2)
names(y) <- paste0("Estimated prevalence of breast feeding for a ",age," month old female child")
print(y)
}
quad_eq(age=6)
quad_eq(age=12)
ages <- data.frame(age = c(6,12))
ages <- data.frame(age_chld = c(6,12))
ages
ages <- data.frame(age_chld = c(6,12))
predict(object = modelA, newdata = ages,type = "response")
ages <- data.frame(age_chld = c(6,12),sex_chld = c(1,1))
predict(object = modelA, newdata = ages,type = "response")
ages <- data.frame(age_chld = c(6,12),sex_chld = c(1,1), agechldc = age_chld - mean(nepalibf$age_chld))
ages <- data.frame(age_chld = c(6,12),sex_chld = c(1,1), agechldc = c(6,12) - mean(nepalibf$age_chld))
predict(object = modelA, newdata = ages,type = "response")
ages <- data.frame(age_chld = c(6,12),sex_chld = c(1,1), agechldc = c(6,12) - mean(nepalibf$age_chld), x3 = agechldc**2)
ages <- data.frame(age_chld = c(6,12),
sex_chld = c(1,1),
agechldc = c(6,12) - mean(nepalibf$age_chld),
x3 = (c(6,12) - mean(nepalibf$age_chld))**2)
predict(object = modelA, newdata = ages,type = "response")
ages <- data.frame(age_chld = c(6,12),
sex_chld = c(1,1),
agechldc = c(6,12) - mean(nepalibf$age_chld),
x3 = (c(6,12) - mean(nepalibf$age_chld))**2)
predA <- predict(object = modelA, newdata = ages, type = "response")
predA
predA$1
predA[1]
ages <- data.frame(age_chld = c(6,12),
sex_chld = c(1,1),
agechldc = c(6,12) - mean(nepalibf$age_chld),
x3 = (c(6,12) - mean(nepalibf$age_chld))**2)
predA <- predict(object = modelA, newdata = ages, type = "response")
predA
getwd()
setwd("~/github/scholar/")
readRDS("grant_df.rds")
df <- readRDS("grant_df.rds")
View(df)
unique(df$contactPi)
n(unique(df$contactPi))
length(unique(df$contactPi))
object.size(df)
object.size(df)
# First, I fit the extended model containing the additional terms.
modelF = glm(bf~sex_chld+age_chld+age_mom+parity, data=nepalibf,
family=binomial(link="logit"))
summary(modelF)
# First, I fit the extended model containing the additional terms.
modelF = glm(bf~sex_chld+age_chld+age_mom+parity, data=nepalibf,
family=binomial(link="logit"))
summary(modelF)
# Next, I will compare the extended model to the null model used previously for the "broken arrow" (breakpoint) model.
summary(modelD)
# To compare the two models, I use a likelihood ratio test below.
anova(modelD, modelF, test="LRT")
knitr::opts_chunk$set(echo = TRUE)
# Most of the packages I need to install are contained in 'tidyverse' package
library(tidyverse)
# I use the 'readr' package to load in the data
nepalibf = read_csv("nepalibf.csv")
# To explore data, I use standard built-in commands
head(nepalibf)
summary(nepalibf)
table(nepalibf$bf)
dim(nepalibf)
sum(table(nepalibf$bf))
# I use a scatterplot matrix to display interrelationships among the three continuous predictor variables (number of births (parity), age of the mother, and child age) and the response variable (breastfeeding).
pairs(~ parity + age_chld + age_mom + bf, data=nepalibf, upper.panel=NULL)
pairs(~ jitter(parity, .5) + jitter(age_chld, .5) + jitter(age_mom, .5) + jitter(bf, .5), data=nepalibf, upper.panel=NULL, pch=20, cex=.5)
# Below I present boxplots which show the distribution of three of the continuous covariates by breastfeeding status.
boxplot(age_chld ~ bf, data=nepalibf, ylab="Age of child (years)")
boxplot(age_mom ~ bf, data=nepalibf)
boxplot(parity ~ bf, data=nepalibf)
# Below I present a table containing the proportions of breastfed children by gender.
CT = xtabs(~ sex_chld + bf, data=nepalibf)
addmargins(CT)
prop.table(CT, margin=1)
addmargins(prop.table(CT, margin=1), margin=2)
# To check whether the log odds of breast feeding is approximately linear with child’s age, I first compute p (defined to be the observed prevalence of breastfeeding for children of a particular age) and then plot the observed log odds (log (p/(1-p))) at the median age for each of the 4 “bins” defined by the quartiles of child’s age.
graphData = nepalibf %>% #new data frame with variables to graph
group_by(age_chld_quart) %>% #group by age quartile
summarize(prop = mean(bf, na.rm=TRUE), # prop of bf in each quartile
lodds = log(prop/(1-prop))) # log odds for each quartile
qplot(x=age_chld_quart, y=lodds, data=graphData, xlab="Age group of child (quartiles)", ylab="log(odds of breast-feeding)", geom = c("line","point"))
# Below I use logistic regression to obtain the estimated prevalence of breast feeding as a function of child’s age (centered at the mean age) and gender.
nepalibf = nepalibf %>%
mutate(agechldc = age_chld - mean(age_chld))
model1 = glm(bf ~ sex_chld + agechldc, data=nepalibf,
family=binomial(link="logit"))
summary(model1)
model1$coefficients
exp(model1$coefficients)
exp(confint.default(model1))
# Here I create x3: quadratic term of child age centered at the mean.
nepalibf = nepalibf %>% mutate(x3 = agechldc^2)
# First, I fit extended model with the quadratic term.
modelA = glm(bf~sex_chld+agechldc+x3, data=nepalibf, family=binomial(link="logit"))
summary(modelA)
# Fit null model without the quadratic term
modelB = glm(bf~sex_chld+agechldc, data=nepalibf, family=binomial(link="logit"))
summary(modelB)
# Use a likelihood ratio test to compare null vs extended models.
anova(modelA, modelB, test="LRT")
# Obtain beta coefficients.
modelA$coefficients
confint.default(modelA)
# Here I use the results for the quadratic model to compare the estimated prevalence of breast feeding for a 12 month old female child and a 6 month old female child.
ages <- data.frame(age_chld = c(6,12),
sex_chld = c(1,1),
agechldc = c(6,12) - mean(nepalibf$age_chld),
x3 = (c(6,12) - mean(nepalibf$age_chld))**2)
predA <- predict(object = modelA, newdata = ages, type = "response")
predA
# To determine whether the fit can be improved with a non-linear “broken arrow model” for child’s age breakpoints at 24 and 36 months, I first create spline terms for breakpoints at 24 and 36 months.
nepalibf = nepalibf %>%
mutate(age1 = age_chld - 24,
age2 = ifelse(age_chld > 24, age_chld - 24, 0),
age3 = ifelse(age_chld > 36, age_chld - 36, 0))
# Next, I fit the extended model containing the spline terms.
modelC = glm(bf~sex_chld+age1+age2+age3, data=nepalibf, family=binomial(link="logit"))
summary(modelC)
# Then, I fit the null model without the spline terms.
modelD = glm(bf~sex_chld+age_chld, data=nepalibf, family=binomial(link="logit"))
summary(modelD)
# Finally, I use a likelihood ratio test (LRT) to compare the null and extended models.
anova(modelC, modelD, test="LRT")
# Below I use an interaction model to test the hypothesis that the association of breast feeding prevalence and child’s age is different for boys and girls.
modelE = glm(bf~agechldc+sex_chld+sex_chld:agechldc, data=nepalibf,
family=binomial(link="logit"))
summary(modelE)
# Below I present a graph of the estimated breast feeding prevalence by child’s age with separate curves for boys and girls.
nepalibf = nepalibf %>%
na.omit() %>% # Remove observations with missing data
mutate(sex_chld=recode_factor(sex_chld, `0`="Male", `1`="Female")) # Factor sex_chld
modelD = glm(bf ~ sex_chld + age_chld, data=nepalibf, family=binomial(link="logit"))
nepalibf = nepalibf %>% mutate(phat = predict(modelD, type="response"))
qplot(x=age_chld, y=phat, color=sex_chld, shape=sex_chld, data=nepalibf,
xlab="Child's age in years", ylab="Predicted prevalence of Breast-feeding")
# install.packages("ResourceSelection")
# The installation command above is commented out because I already have the "ResourceSelection" package installed.
# Below I perform a Hosmer-Lemeshow goodness-of- fit test for the model that includes gender and child’s age.
# This test involves dividing the predicted probabilities into 10 roughly equal groups for calculation of the chi-square comparing observed and expected events across the groups.
library(ResourceSelection)
hoslem.test(nepalibf$bf, nepalibf$phat, g=10)
hoslem.test(nepalibf$bf, nepalibf$phat)$observed
hoslem.test(nepalibf$bf, nepalibf$phat)$expected
# First, I fit the extended model containing the additional terms.
modelF = glm(bf~sex_chld+age_chld+age_mom+parity, data=nepalibf,
family=binomial(link="logit"))
summary(modelF)
# Next, I will compare the extended model to the null model used previously for the "broken arrow" (breakpoint) model.
summary(modelD)
# To compare the two models, I use a likelihood ratio test below.
anova(modelD, modelF, test="LRT")
hoslem.test(nepalibf$bf, nepalibf$phat, g=10)
hoslem.test(nepalibf$bf, nepalibf$phat)$observed
hoslem.test(nepalibf$bf, nepalibf$phat)$expected
hoslem.test(nepalibf$bf, nepalibf$phat)$observed
hoslem.test(nepalibf$bf, nepalibf$phat)$expected
hoslem.test(nepalibf$bf, nepalibf$phat, g=10)
hoslem.test(nepalibf$bf, nepalibf$phat)$observed
hoslem.test(nepalibf$bf, nepalibf$phat)$expected
# install.packages("ResourceSelection")
# The installation command above is commented out because I already have the "ResourceSelection" package installed.
# Below I perform a Hosmer-Lemeshow goodness-of- fit test for the model that includes gender and child’s age.
# This test involves dividing the predicted probabilities into 10 roughly equal groups for calculation of the chi-square comparing observed and expected events across the groups.
library(ResourceSelection)
hoslem.test(nepalibf$bf, nepalibf$phat, g=10)
hoslem.test(nepalibf$bf, nepalibf$phat)$observed
hoslem.test(nepalibf$bf, nepalibf$phat)$expected
hoslem.test(nepalibf$bf, nepalibf$phat)$observed/hoslem.test(nepalibf$bf, nepalibf$phat)$expected
hoslem.test(nepalibf$bf, nepalibf$phat)$observed/hoslem.test(nepalibf$bf, nepalibf$phat)$expected
# install.packages("ResourceSelection")
# The installation command above is commented out because I already have the "ResourceSelection" package installed.
# Below I perform a Hosmer-Lemeshow goodness-of- fit test for the model that includes gender and child’s age.
# This test involves dividing the predicted probabilities into 10 roughly equal groups for calculation of the chi-square comparing observed and expected events across the groups.
library(ResourceSelection)
hoslem.test(nepalibf$bf, nepalibf$phat, g=10)
hoslem.test(nepalibf$bf, nepalibf$phat)$observed
hoslem.test(nepalibf$bf, nepalibf$phat)$expected
hoslem.test(nepalibf$bf, nepalibf$phat)$observed/hoslem.test(nepalibf$bf, nepalibf$phat)$expected
plot(hoslem.test(nepalibf$bf, nepalibf$phat)$observed,hoslem.test(nepalibf$bf, nepalibf$phat)$expected)
plot(x=hoslem.test(nepalibf$bf, nepalibf$phat)$observed,y=hoslem.test(nepalibf$bf, nepalibf$phat)$expected)
plot(x=(hoslem.test(nepalibf$bf, nepalibf$phat)$observed),(y=hoslem.test(nepalibf$bf, nepalibf$phat)$expected))
plot(x=(hoslem.test(nepalibf$bf, nepalibf$phat)$observed),(y=hoslem.test(nepalibf$bf, nepalibf$phat)$expected),type = "l")
plot(x=(hoslem.test(nepalibf$bf, nepalibf$phat)$observed[,2]),(y=hoslem.test(nepalibf$bf, nepalibf$phat)$expected[,2]),type = "l")
plot(x=(hoslem.test(nepalibf$bf, nepalibf$phat)$observed[,2]),(y=hoslem.test(nepalibf$bf, nepalibf$phat)$expected[,2]),type = c("p","l"))
plot(x=(hoslem.test(nepalibf$bf, nepalibf$phat)$observed[,2]),(y=hoslem.test(nepalibf$bf, nepalibf$phat)$expected[,2]),type = c("point","line"))
plot(x=(hoslem.test(nepalibf$bf, nepalibf$phat)$observed[,2]),(y=hoslem.test(nepalibf$bf, nepalibf$phat)$expected[,2]),type = "n")
plot(x=(hoslem.test(nepalibf$bf, nepalibf$phat)$observed[,2]),(y=hoslem.test(nepalibf$bf, nepalibf$phat)$expected[,2]),type = "p")
hoslem.test(nepalibf$bf, nepalibf$phat)$observed$yhat0
hoslem.test(nepalibf$bf, nepalibf$phat)$observed["yhat0"]
hoslem.test(nepalibf$bf, nepalibf$phat)$observed[,"yhat0"]
yhat0 <- hoslem.test(nepalibf$bf, nepalibf$phat)$observed[,2]
yhat0 <- hoslem.test(nepalibf$bf, nepalibf$phat)$observed[,2]
yhat1 <- hoslem.test(nepalibf$bf, nepalibf$phat)$observed[,3]
yhat0 <- hoslem.test(nepalibf$bf, nepalibf$phat)$observed[,1]
yhat1 <- hoslem.test(nepalibf$bf, nepalibf$phat)$observed[,2]
y0 <- y=hoslem.test(nepalibf$bf, nepalibf$phat)$expected[,1]
yhat0 <- hoslem.test(nepalibf$bf, nepalibf$phat)$observed[,1]
yhat1 <- hoslem.test(nepalibf$bf, nepalibf$phat)$observed[,2]
y0 <- hoslem.test(nepalibf$bf, nepalibf$phat)$expected[,1]
y1 <- hoslem.test(nepalibf$bf, nepalibf$phat)$expected[,2]
plot(x = yhat0, y = y0,type = "p")
plot(x = yhat1, y = y1,type = "p")
yhat0 <- hoslem.test(nepalibf$bf, nepalibf$phat)$observed[,1]
yhat1 <- hoslem.test(nepalibf$bf, nepalibf$phat)$observed[,2]
y0 <- hoslem.test(nepalibf$bf, nepalibf$phat)$expected[,1]
y1 <- hoslem.test(nepalibf$bf, nepalibf$phat)$expected[,2]
plot(x = yhat0, y = y0,type = "p")
lines(x = yhat0, y = y0,type = "p")
plot(x = yhat1, y = y1,type = "p")
lines(x = yhat1, y = y1,type = "p")
plot(x = yhat0, y = y0,type = "p")
lines(x = yhat0, y = y0,type = "p")
yhat0 <- hoslem.test(nepalibf$bf, nepalibf$phat)$observed[,1]
yhat1 <- hoslem.test(nepalibf$bf, nepalibf$phat)$observed[,2]
y0 <- hoslem.test(nepalibf$bf, nepalibf$phat)$expected[,1]
y1 <- hoslem.test(nepalibf$bf, nepalibf$phat)$expected[,2]
plot(x = yhat0, y = y0,type = "p")
lines(x = yhat0, y = y0)
plot(x = yhat1, y = y1,type = "p")
lines(x = yhat1, y = y1)
